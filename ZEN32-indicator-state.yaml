blueprint:
  name: ZEN32 LED state
  description: For Zooz ZEN32. Sets the indicator color when linked entity is off, on or unavailable.  4.2024.3
  domain: automation
  input:
    zooz_switch:
      name: Zooz Switch
      description: List of available Zooz ZEN32 switches.
      selector:
        device:
          filter:
            - integration: zwave_js
              manufacturer: Zooz
              model: ZEN32
            - integration: zwave_js
              manufacturer: Zooz
              model: ZEN32 800LR
          multiple: false
    target_entity:
      name: Switch
      description: The switch to track
      selector:
        entity:
          domain:
          - alarm_control_panel
          - binary_sensor
          - climate
          - cover
          - fan
          - input_boolean
          - light
          - lock
          - media_player
          - sensor
          - switch
          multiple: false
    scene_button:
      name: Scene Button
      description: The button to link
      selector:
        select:
          mode: dropdown
          options:
            - label: Scene 5 (Big Button)
              value: '0' # param 1 for on/off, param 6 for color
            - label: Scene 1 (Top Left)
              value: '1' # param 2 for on/off, param 7 for color
            - label: Scene 2 (Top Right)
              value: '2' # param 3 for on/off, param 8 for color
            - label: Scene 3 (Bottom Left)
              value: '3' # param 4 for on/off, param 9 for color
            - label: Scene 4 (Bottom Right)
              value: '4' # param 5 for on/off, param 10 for color
    off_state:
      name: Off State
      description: Led state when target is off
      default: Led On
      selector:
        select:
          mode: dropdown
          options:
            - label: Led On
              value: '3'
            - label: Led Off
              value: '2'
    off_color:
      name: State Off Color 
      description: Color for led when target is off (default white)
      default: White
      selector:
        select:
          mode: dropdown
          options:
            - label: White
              value: '0'
            - label: Blue
              value: '1'
            - label: Green
              value: '2'
            - label: Red
              value: '3'
            - label: Magenta
              value: '4'
            - label: Yellow
              value: '5'
            - label: Cyan
              value: '6'
    on_state:
      name: On State
      description: Led state when target is On
      default: Led On
      selector:
        select:
          mode: dropdown
          options:
            - label: Led On
              value: '3'
            - label: Led Off
              value: '2'
    on_color:
      name: State On Color 
      description: Color for led when target is on (default white)
      default: Green
      selector:
        select:
          mode: dropdown
          options:
            - label: White
              value: '0'
            - label: Blue
              value: '1'
            - label: Green
              value: '2'
            - label: Red
              value: '3'
            - label: Magenta
              value: '4'
            - label: Yellow
              value: '5'
            - label: Cyan
              value: '6'            
    unavail_state:
      name: Unavailable State
      description: Led state when target is unavailable
      default: Led On
      selector:
        select:
          mode: dropdown
          options:
            - label: Led On
              value: '3'
            - label: Led Off
              value: '2'
    unavail_color:
      name: Unavailable Color 
      description: Color for led when target is unavailable (default red)
      default: Red
      selector:
        select:
          mode: dropdown
          options:
            - label: White
              value: '0'
            - label: Blue
              value: '1'
            - label: Green
              value: '2'
            - label: Red
              value: '3'
            - label: Magenta
              value: '4'
            - label: Yellow
              value: '5'
            - label: Cyan
              value: '6'

mode: single
max_exceeded: silent
variables:
  controller_id: !input 'zooz_switch'
  entity_id: !input 'target_entity'
  button_id: !input 'scene_button'
  toggle_offset: 1
  color_offset: 6
  on_state: !input 'on_state'
  on_color: !input 'on_color'
  off_state: !input 'off_state'
  off_color: !input 'off_color'
  unavail_state: !input 'unavail_state'
  unavail_color: !input 'unavail_color'
trigger:
  - platform: state
    entity_id: !input 'target_entity'
action:
- choose:
  - conditions: '{{ is_state(entity_id, ''off'') }}' # switch off
    sequence:
      - parallel:
        - service: zwave_js.set_config_parameter # set indicator color
          data:
            parameter: '{{ (button_id | int) + (color_offset | int) }}'
            value: '{{ off_color }}'
          target: 
            device_id: '{{ controller_id }}'
        - service: zwave_js.set_config_parameter # turn indicator on/off
          data:
            parameter: '{{ (button_id | int) + (toggle_offset | int) }}'
            value: '{{ off_state }}'
          target: 
            device_id: '{{ controller_id }}'
  - conditions: '{{ is_state(entity_id, ''on'') }}' # switch on
    sequence:
      - parallel:
        - service: zwave_js.set_config_parameter # set indicator color
          data:
            parameter: '{{ (button_id | int) + (color_offset | int) }}'
            value: '{{ on_color }}'
          target: 
            device_id: '{{ controller_id }}'
        - service: zwave_js.set_config_parameter # turn indicator on/off
          data:
            parameter: '{{ (button_id | int) + (toggle_offset | int) }}'
            value: '{{ on_state }}'
          target: 
            device_id: '{{ controller_id }}'
  - conditions: '{{ is_state(entity_id, ''unavailable'') }}' # switch unavailable
    sequence:
      - parallel:
        - service: zwave_js.set_config_parameter # set indicator color
          data:
            parameter: '{{ (button_id | int) + (color_offset | int) }}'
            value: '{{ unavail_color }}'
          target: 
            device_id: '{{ controller_id }}'
        - service: zwave_js.set_config_parameter # turn indicator on/off
          data:
            parameter: '{{ (button_id | int) + (toggle_offset | int) }}'
            value: '{{ unavail_state }}'
          target: 
            device_id: '{{ controller_id }}'